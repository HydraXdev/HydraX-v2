import argparse
import os
import sys
import datetime

LOG_PATH = "/root/HydraX-v2/trade_debug.log"

def log(message):
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    with open(LOG_PATH, "a") as log_file:
        log_file.write(f"[{timestamp}] {message}\n")

def main():
    parser = argparse.ArgumentParser(description="Trigger trade via PowerShell on Windows VPS")
    parser.add_argument("--symbol", required=True, help="Symbol to trade, e.g., XAUUSD")
    parser.add_argument("--type", required=True, choices=["buy", "sell"], help="Trade type")
    parser.add_argument("--lot", type=float, required=True, help="Lot size")
    args = parser.parse_args()

    symbol = args.symbol
    trade_type = args.type
    lot = args.lot

    payload = f'{{\"symbol\":\"{symbol}\",\"type\":\"{trade_type}\",\"lot\":{lot}}}'

    ssh_command = (
        "sshpass -p 'UJl2Z3k1@KA?6MzDJ*qr1b?@RhREQk&u' "
        "ssh -tt Administrator@3.145.84.187 "
        f"\"powershell -NoProfile -Command \\\"Set-Content -Path 'C:\\\\HydraBridge\\\\signal.json' -Value '{payload}'\\\"\""
    )

    print("\n[+] EXECUTING SSH TRADE COMMAND:")
    print(ssh_command)
    log("Executing command:")
    log(ssh_command)

    try:
        result = os.system(ssh_command)
        log(f"Command exit code: {result}")
        if result == 0:
            print("[âœ“] Trade signal successfully injected. Check MT5 log for execution.")
            log("Trade injection succeeded.")
        else:
            print(f"[x] Trade injection failed. SSH exit code: {result}")
            log("Trade injection failed.")
            sys.exit(1)
    except Exception as e:
        log(f"Exception occurred: {str(e)}")
        print(f"[x] Exception during execution: {str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    main()
